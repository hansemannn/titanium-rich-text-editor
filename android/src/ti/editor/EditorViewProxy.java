/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * Appcelerator Titanium Mobile
 * Copyright (c) 2009-2010 by Appcelerator, Inc. All Rights Reserved.
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 *
 */
package ti.editor;

import org.appcelerator.kroll.KrollProxy;
import org.appcelerator.kroll.annotations.Kroll;
import org.appcelerator.titanium.proxy.TiViewProxy;
import org.appcelerator.titanium.view.TiUIView;
import android.app.Activity;
import android.os.Message;
import org.appcelerator.kroll.common.AsyncResult;

@Kroll.proxy(creatableInModule = TitaniumRichTextEditorModule.class)
public class EditorViewProxy extends TiViewProxy {
	protected static final int MSG_BLUR = KrollProxy.MSG_LAST_ID + 101;
	protected static final int MSG_FOCUS = KrollProxy.MSG_LAST_ID + 102;

	@Override
	public TiUIView createView(Activity activity) {
		TiUIView view = new EditorView(this);

		view.getLayoutParams().autoFillsHeight = true;
		view.getLayoutParams().autoFillsWidth = true;

		return view;
	}
	
	protected EditorView getView() {
		return (EditorView) getOrCreateView();
	}

	public boolean handleMessage(Message message) {
		AsyncResult result;
		
		switch (message.what) {
			case MSG_BLUR: {
				result = (AsyncResult) message.obj;
				getView().blur();
				result.setResult(null);
				return true;
			}
			case MSG_FOCUS: {
				result = (AsyncResult) message.obj;
				getView().focus();
				result.setResult(null);
				return true;
			}
		}

		return super.handleMessage(message);
	}

	@Kroll.method
	public void focus() {
		getView().focus();
	}

	@Kroll.method
	public void blur() {
		getView().blur();
	}

	@Kroll.setProperty
	public void setEditorToolbarVisible(Boolean editorToolbarVisible) {
		getView().setEditorToolbarVisible(editorToolbarVisible);
	}

	@Kroll.setProperty
	public void setHintText(String hintText) {
		getView().setHintText(hintText);
	}
	
	@Kroll.getProperty
	public String getHintText() {
		return getView().getHintText();
	}
	
	@Kroll.setProperty
	public void setContent(String content) {
		getView().setContent(content);
	}

	@Kroll.getProperty
	public String getContent() {
		return getView().getContent();
	}
	
	@Kroll.setProperty
	public void setEditable(boolean editable) {
		getView().setEditable(editable);
	}
	
	@Kroll.getProperty
	public boolean getEditable() {
		return getView().getEditable();
	}
	
	@Kroll.setProperty
	public void setColor(Object color) {
		getView().setColor(color);
	}
	
	@Kroll.setProperty
	public void setEditorBackgroundColor(Object color) {
		getView().setEditorBackgroundColor(color);
	}
}
