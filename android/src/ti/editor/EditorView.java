/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * Appcelerator Titanium Mobile
 * Copyright (c) 2009-2010 by Appcelerator, Inc. All Rights Reserved.
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 *
 */
package ti.editor;

import org.appcelerator.kroll.KrollDict;
import org.appcelerator.kroll.KrollProxy;
import org.appcelerator.kroll.common.TiConfig;
import org.appcelerator.titanium.proxy.TiViewProxy;
import org.appcelerator.titanium.view.TiUIView;
import android.app.Activity;

import jp.wasabeef.richeditor.RichEditor;

public class EditorView extends TiUIView
{
	private static final String LCAT = "EditorView";
	private static final boolean DBG = TiConfig.LOGD;

	private RichEditor editorView;

	public EditorView(TiViewProxy proxy)
	{
		super(proxy);

		final Activity mActivity = proxy.getActivity();
		final TiViewProxy viewProxy = proxy;

		editorView = new RichEditor(mActivity);

		editorView.setOnTextChangeListener(new RichEditor.OnTextChangeListener() {
			@Override public void onTextChange(String text) {
				KrollDict event = new KrollDict();
				event.put("value", text);
				viewProxy.fireEvent("change", event);
			}
		});

		setNativeView(editorView);
	}

	@Override
	public void processProperties(KrollDict d)
	{
		super.processProperties(d);

		if (d.containsKey("content")) {
			setContent(d.getString("content"));
		}
	}

	@Override
	public void propertyChanged(String key, Object oldValue, Object newValue, KrollProxy proxy)
	{
		KrollDict d = new KrollDict();
		d.put(key, newValue);
		processProperties(d);
	}

	/** General API's **/

	public void setContent(String content) {
		editorView.setHtml(content);
	}

	public void focus() {
		editorView.focusEditor();
	}

	public void blur() {
		editorView.clearFocusEditor();
	}

	public String getContent() {
		return editorView.getHtml();
	}

	/** Actions **/

	public void makeBold() {
		editorView.setBold();
	}

	public void makeUnderline() {
		editorView.setUnderline();
	}

	public void makeStrikeThrough() {
		editorView.setStrikeThrough();
	}

	public void makeOrderedList() {
		editorView.setNumbers();
	}

	public void makeUnorderedList() {
		editorView.setBullets();
	}

	public void setActionToggleLeft() {
		editorView.setAlignLeft();
	}

	public void setActionToggleCenter() {
		editorView.setAlignCenter();
	}

	public void setActionToggleRight() {
		editorView.setAlignRight();
	}

    public void setHintText(String hintText) {
		editorView.setPlaceholder(hintText);
    }
}
