#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.8 (swiftlang-5.8.0.124.2 clang-1403.0.22.11.100)
#ifndef AZTEC_SWIFT_H
#define AZTEC_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#if __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
#endif
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreFoundation;
@import Foundation;
@import ObjectiveC;
@import UIKit;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="Aztec",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
@class NSCoder;

/// Represents a basic attribute with no value.  This is also the base class for all other
/// attributes.
SWIFT_CLASS("_TtC5Aztec9Attribute")
@interface Attribute : NSObject <NSCoding>
@property (nonatomic, readonly) NSUInteger hash;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder;
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



@interface NSBundle (SWIFT_EXTENSION(Aztec))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) NSBundle * _Nonnull aztecBundle;)
+ (NSBundle * _Nonnull)aztecBundle SWIFT_WARN_UNUSED_RESULT;
@end

@class NSTextContainer;
@class UIImage;
@class NSData;
@class NSString;

/// Comment Attachments: Represents an HTML Comment
SWIFT_CLASS("_TtC5Aztec17CommentAttachment")
@interface CommentAttachment : NSTextAttachment
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
- (UIImage * _Nullable)imageForBounds:(CGRect)imageBounds textContainer:(NSTextContainer * _Nullable)textContainer characterIndex:(NSUInteger)charIndex SWIFT_WARN_UNUSED_RESULT;
- (CGRect)attachmentBoundsForTextContainer:(NSTextContainer * _Nullable)textContainer proposedLineFragment:(CGRect)lineFrag glyphPosition:(CGPoint)position characterIndex:(NSUInteger)charIndex SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithData:(NSData * _Nullable)contentData ofType:(NSString * _Nullable)uti SWIFT_UNAVAILABLE;
@end



/// Composite view containing Aztec for visual editing and an HTML editor view.
SWIFT_CLASS("_TtC5Aztec10EditorView")
@interface EditorView : UIView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


@interface EditorView (SWIFT_EXTENSION(Aztec))
- (BOOL)becomeFirstResponder;
@end



@class UITextRange;
@class UITextPosition;
@protocol UITextInputDelegate;
@protocol UITextInputTokenizer;
@class UITextSelectionRect;

@interface EditorView (SWIFT_EXTENSION(Aztec)) <UITextInput>
- (NSString * _Nullable)textInRange:(UITextRange * _Nonnull)range SWIFT_WARN_UNUSED_RESULT;
- (void)replaceRange:(UITextRange * _Nonnull)range withText:(NSString * _Nonnull)text;
@property (nonatomic, readonly, strong) UITextRange * _Nullable markedTextRange;
@property (nonatomic, copy) NSDictionary<NSAttributedStringKey, id> * _Nullable markedTextStyle;
- (void)setMarkedText:(NSString * _Nullable)markedText selectedRange:(NSRange)selectedRange;
- (void)unmarkText;
@property (nonatomic, readonly, strong) UITextPosition * _Nonnull beginningOfDocument;
@property (nonatomic, readonly, strong) UITextPosition * _Nonnull endOfDocument;
- (UITextRange * _Nullable)textRangeFromPosition:(UITextPosition * _Nonnull)fromPosition toPosition:(UITextPosition * _Nonnull)toPosition SWIFT_WARN_UNUSED_RESULT;
- (UITextPosition * _Nullable)positionFromPosition:(UITextPosition * _Nonnull)position offset:(NSInteger)offset SWIFT_WARN_UNUSED_RESULT;
- (UITextPosition * _Nullable)positionFromPosition:(UITextPosition * _Nonnull)position inDirection:(UITextLayoutDirection)direction offset:(NSInteger)offset SWIFT_WARN_UNUSED_RESULT;
- (NSComparisonResult)comparePosition:(UITextPosition * _Nonnull)position toPosition:(UITextPosition * _Nonnull)other SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)offsetFromPosition:(UITextPosition * _Nonnull)from toPosition:(UITextPosition * _Nonnull)toPosition SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, strong) id <UITextInputDelegate> _Nullable inputDelegate;
@property (nonatomic, readonly, strong) id <UITextInputTokenizer> _Nonnull tokenizer;
- (UITextPosition * _Nullable)positionWithinRange:(UITextRange * _Nonnull)range farthestInDirection:(UITextLayoutDirection)direction SWIFT_WARN_UNUSED_RESULT;
- (UITextRange * _Nullable)characterRangeByExtendingPosition:(UITextPosition * _Nonnull)position inDirection:(UITextLayoutDirection)direction SWIFT_WARN_UNUSED_RESULT;
- (NSWritingDirection)baseWritingDirectionForPosition:(UITextPosition * _Nonnull)position inDirection:(UITextStorageDirection)direction SWIFT_WARN_UNUSED_RESULT;
- (void)setBaseWritingDirection:(NSWritingDirection)writingDirection forRange:(UITextRange * _Nonnull)range;
- (CGRect)firstRectForRange:(UITextRange * _Nonnull)range SWIFT_WARN_UNUSED_RESULT;
- (CGRect)caretRectForPosition:(UITextPosition * _Nonnull)position SWIFT_WARN_UNUSED_RESULT;
- (NSArray<UITextSelectionRect *> * _Nonnull)selectionRectsForRange:(UITextRange * _Nonnull)range SWIFT_WARN_UNUSED_RESULT;
- (UITextPosition * _Nullable)closestPositionToPoint:(CGPoint)point SWIFT_WARN_UNUSED_RESULT;
- (UITextPosition * _Nullable)closestPositionToPoint:(CGPoint)point withinRange:(UITextRange * _Nonnull)range SWIFT_WARN_UNUSED_RESULT;
- (UITextRange * _Nullable)characterRangeAtPoint:(CGPoint)point SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) BOOL hasText;
- (void)insertText:(NSString * _Nonnull)text;
- (void)deleteBackward;
@property (nonatomic, strong) UITextRange * _Nullable selectedTextRange;
@end

@class UIColor;
@class UITraitCollection;
@class NSLayoutConstraint;

SWIFT_CLASS("_TtC5Aztec9FormatBar")
@interface FormatBar : UIView
/// Tint Color
@property (nonatomic, strong) UIColor * _Nullable tintColor;
@property (nonatomic) CGRect bounds;
@property (nonatomic) CGRect frame;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)didMoveToWindow;
- (void)layoutSubviews;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)traitCollectionDidChange:(UITraitCollection * _Nullable)previousTraitCollection;
- (void)safeAreaInsetsDidChange SWIFT_AVAILABILITY(ios,introduced=11.0);
- (void)addConstraint:(NSLayoutConstraint * _Nonnull)constraint;
@property (nonatomic, readonly) CGSize intrinsicContentSize;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end




@class UIScrollView;

@interface FormatBar (SWIFT_EXTENSION(Aztec)) <UIScrollViewDelegate>
- (void)scrollViewDidScroll:(UIScrollView * _Nonnull)scrollView;
@end




SWIFT_CLASS("_TtC5Aztec13FormatBarItem")
@interface FormatBarItem : UIButton
/// Enabled Listener: Update Tint Colors, as needed
@property (nonatomic, getter=isEnabled) BOOL enabled;
/// Highlight Listener: Update Tint Colors, as needed
@property (nonatomic, getter=isHighlighted) BOOL highlighted;
/// Selection Listener: Update Tint Colors, as needed
@property (nonatomic, getter=isSelected) BOOL selected;
@property (nonatomic, readonly) CGSize intrinsicContentSize;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


/// HTML Attachments: Represents unknown HTML
SWIFT_CLASS("_TtC5Aztec14HTMLAttachment")
@interface HTMLAttachment : NSTextAttachment
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
- (UIImage * _Nullable)imageForBounds:(CGRect)imageBounds textContainer:(NSTextContainer * _Nullable)textContainer characterIndex:(NSUInteger)charIndex SWIFT_WARN_UNUSED_RESULT;
- (CGRect)attachmentBoundsForTextContainer:(NSTextContainer * _Nullable)textContainer proposedLineFragment:(CGRect)lineFrag glyphPosition:(CGPoint)position characterIndex:(NSUInteger)charIndex SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithData:(NSData * _Nullable)contentData ofType:(NSString * _Nullable)uti SWIFT_UNAVAILABLE;
@end



@interface HTMLAttachment (SWIFT_EXTENSION(Aztec)) <NSCopying>
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC5Aztec25HTMLElementRepresentation")
@interface HTMLElementRepresentation : NSObject <NSCoding>
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder;
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// This enum specifies the different entities that can represent a style in HTML.
SWIFT_CLASS("_TtC5Aztec18HTMLRepresentation")
@interface HTMLRepresentation : NSObject <NSCoding>
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSAttributedString;
@class NSURL;
@class NSAttributedStringMarkdownParsingOptions;

SWIFT_CLASS("_TtC5Aztec11HTMLStorage")
@interface HTMLStorage : NSTextStorage
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, readonly, copy) NSString * _Nonnull string;
- (NSDictionary<NSAttributedStringKey, id> * _Nonnull)attributesAtIndex:(NSUInteger)location effectiveRange:(NSRangePointer _Nullable)range SWIFT_WARN_UNUSED_RESULT;
- (void)setAttributes:(NSDictionary<NSAttributedStringKey, id> * _Nullable)attrs range:(NSRange)range;
- (void)replaceCharactersInRange:(NSRange)range withString:(NSString * _Nonnull)str;
- (void)replaceCharactersInRange:(NSRange)range withAttributedString:(NSAttributedString * _Nonnull)attrString;
- (nullable instancetype)initWithFileURL:(NSURL * _Nonnull)url options:(NSDictionary * _Nonnull)options documentAttributes:(NSDictionary * _Nullable * _Nullable)dict error:(NSError * _Nullable * _Nullable)error SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithURL:(NSURL * _Nonnull)url options:(NSDictionary<NSAttributedStringDocumentReadingOptionKey, id> * _Nonnull)options documentAttributes:(NSDictionary * _Nullable * _Nullable)dict error:(NSError * _Nullable * _Nullable)error SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithData:(NSData * _Nonnull)data options:(NSDictionary<NSAttributedStringDocumentReadingOptionKey, id> * _Nonnull)options documentAttributes:(NSDictionary * _Nullable * _Nullable)dict error:(NSError * _Nullable * _Nullable)error SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithContentsOfMarkdownFileAtURL:(NSURL * _Nonnull)markdownFile options:(NSAttributedStringMarkdownParsingOptions * _Nullable)options baseURL:(NSURL * _Nullable)baseURL error:(NSError * _Nullable * _Nullable)error SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithMarkdown:(NSData * _Nonnull)markdown options:(NSAttributedStringMarkdownParsingOptions * _Nullable)options baseURL:(NSURL * _Nullable)baseURL error:(NSError * _Nullable * _Nullable)error SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithMarkdownString:(NSString * _Nonnull)markdownString options:(NSAttributedStringMarkdownParsingOptions * _Nullable)options baseURL:(NSURL * _Nullable)baseURL error:(NSError * _Nullable * _Nullable)error SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithString:(NSString * _Nonnull)str SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithString:(NSString * _Nonnull)str attributes:(NSDictionary<NSAttributedStringKey, id> * _Nullable)attrs SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithAttributedString:(NSAttributedString * _Nonnull)attrStr SWIFT_UNAVAILABLE;
@end




SWIFT_CLASS("_TtC5Aztec17ParagraphProperty")
@interface ParagraphProperty : NSObject <NSCoding>
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
@end


SWIFT_CLASS("_TtC5Aztec6Header")
@interface Header : ParagraphProperty
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



SWIFT_CLASS("_TtC5Aztec15MediaAttachment")
@interface MediaAttachment : NSTextAttachment
/// Required Initializer
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
/// Required Initializer
- (nonnull instancetype)initWithData:(NSData * _Nullable)contentData ofType:(NSString * _Nullable)uti OBJC_DESIGNATED_INITIALIZER;
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
- (UIImage * _Nullable)imageForBounds:(CGRect)imageBounds textContainer:(NSTextContainer * _Nullable)textContainer characterIndex:(NSUInteger)charIndex SWIFT_WARN_UNUSED_RESULT;
/// Returns the “Onscreen Character Size” of the attachment range. When we’re in Alignment.None,
/// the attachment will be ‘Inline’, and thus, we’ll return the actual Associated View Size.
/// Otherwise, we’ll always take the whole container’s width.
- (CGRect)attachmentBoundsForTextContainer:(NSTextContainer * _Nullable)textContainer proposedLineFragment:(CGRect)lineFrag glyphPosition:(CGPoint)position characterIndex:(NSUInteger)charIndex SWIFT_WARN_UNUSED_RESULT;
@end


/// Custom text attachment.
SWIFT_CLASS("_TtC5Aztec15ImageAttachment")
@interface ImageAttachment : MediaAttachment
/// Required Initializer
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
/// Required Initializer
- (nonnull instancetype)initWithData:(NSData * _Nullable)contentData ofType:(NSString * _Nullable)uti OBJC_DESIGNATED_INITIALIZER;
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
@end


@interface ImageAttachment (SWIFT_EXTENSION(Aztec))
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
@end



/// Custom horizontal line drawing attachment.
SWIFT_CLASS("_TtC5Aztec14LineAttachment")
@interface LineAttachment : NSTextAttachment
- (UIImage * _Nullable)imageForBounds:(CGRect)imageBounds textContainer:(NSTextContainer * _Nullable)textContainer characterIndex:(NSUInteger)charIndex SWIFT_WARN_UNUSED_RESULT;
- (CGRect)attachmentBoundsForTextContainer:(NSTextContainer * _Nullable)textContainer proposedLineFragment:(CGRect)lineFrag glyphPosition:(CGPoint)position characterIndex:(NSUInteger)charIndex SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithData:(NSData * _Nullable)contentData ofType:(NSString * _Nullable)uti OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=7.0);
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end




@interface MediaAttachment (SWIFT_EXTENSION(Aztec)) <NSCopying>
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
@end




















@class NSParagraphStyle;

SWIFT_CLASS("_TtC5Aztec14ParagraphStyle")
@interface ParagraphStyle : NSMutableParagraphStyle
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
- (void)setParagraphStyle:(NSParagraphStyle * _Nonnull)baseParagraphStyle;
@property (nonatomic) CGFloat headIndent;
@property (nonatomic) CGFloat firstLineHeadIndent;
@property (nonatomic) CGFloat tailIndent;
@property (nonatomic) CGFloat paragraphSpacing;
@property (nonatomic) CGFloat paragraphSpacingBefore;
@property (nonatomic) CGFloat lineSpacing;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ParagraphStyle * _Nonnull defaultParagraphStyle;)
+ (ParagraphStyle * _Nonnull)defaultParagraphStyle SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
- (id _Nonnull)mutableCopyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger hash;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end



SWIFT_CLASS("_TtC5Aztec8TextList")
@interface TextList : ParagraphProperty
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Custom NSTextStorage
SWIFT_CLASS("_TtC5Aztec11TextStorage")
@interface TextStorage : NSTextStorage
@property (nonatomic, readonly, copy) NSString * _Nonnull string;
/// Retrieves the attributes for the requested character location.
/// important:
/// please note that this method returns the style at the character location, and
/// NOT at the caret location.  For N characters we always have N+1 character locations.
- (NSDictionary<NSAttributedStringKey, id> * _Nonnull)attributesAtIndex:(NSUInteger)location effectiveRange:(NSRangePointer _Nullable)range SWIFT_WARN_UNUSED_RESULT;
- (void)replaceCharactersInRange:(NSRange)range withString:(NSString * _Nonnull)str;
- (void)replaceCharactersInRange:(NSRange)range withAttributedString:(NSAttributedString * _Nonnull)attrString;
- (void)setAttributes:(NSDictionary<NSAttributedStringKey, id> * _Nullable)attrs range:(NSRange)range;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithFileURL:(NSURL * _Nonnull)url options:(NSDictionary * _Nonnull)options documentAttributes:(NSDictionary * _Nullable * _Nullable)dict error:(NSError * _Nullable * _Nullable)error OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=7.0,deprecated=9.0);
- (nullable instancetype)initWithURL:(NSURL * _Nonnull)url options:(NSDictionary<NSAttributedStringDocumentReadingOptionKey, id> * _Nonnull)options documentAttributes:(NSDictionary * _Nullable * _Nullable)dict error:(NSError * _Nullable * _Nullable)error OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=9.0);
- (nullable instancetype)initWithData:(NSData * _Nonnull)data options:(NSDictionary<NSAttributedStringDocumentReadingOptionKey, id> * _Nonnull)options documentAttributes:(NSDictionary * _Nullable * _Nullable)dict error:(NSError * _Nullable * _Nullable)error OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=7.0);
- (nullable instancetype)initWithContentsOfMarkdownFileAtURL:(NSURL * _Nonnull)markdownFile options:(NSAttributedStringMarkdownParsingOptions * _Nullable)options baseURL:(NSURL * _Nullable)baseURL error:(NSError * _Nullable * _Nullable)error OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=15.0);
- (nullable instancetype)initWithMarkdown:(NSData * _Nonnull)markdown options:(NSAttributedStringMarkdownParsingOptions * _Nullable)options baseURL:(NSURL * _Nullable)baseURL error:(NSError * _Nullable * _Nullable)error OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=15.0);
- (nullable instancetype)initWithMarkdownString:(NSString * _Nonnull)markdownString options:(NSAttributedStringMarkdownParsingOptions * _Nullable)options baseURL:(NSURL * _Nullable)baseURL error:(NSError * _Nullable * _Nullable)error OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=15.0);
- (nonnull instancetype)initWithString:(NSString * _Nonnull)str OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithString:(NSString * _Nonnull)str attributes:(NSDictionary<NSAttributedStringKey, id> * _Nullable)attrs OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithAttributedString:(NSAttributedString * _Nonnull)attrStr OBJC_DESIGNATED_INITIALIZER;
@end




@class UIInputViewController;
@class UIFont;
@class UIKeyCommand;

SWIFT_CLASS("_TtC5Aztec8TextView")
@interface TextView : UITextView
@property (nonatomic, strong) UIInputViewController * _Nullable inputViewController;
@property (nonatomic, strong) UIColor * _Nullable textColor;
/// Blockquote Blocks Border and Text Colors
@property (nonatomic, copy) NSArray<UIColor *> * _Nonnull blockquoteBorderColors;
/// Blockquote Blocks Background Color.
@property (nonatomic, strong) UIColor * _Nullable blockquoteBackgroundColor;
- (void)traitCollectionDidChange:(UITraitCollection * _Nullable)previousTraitCollection;
/// Blockquote Blocks Background Width.
@property (nonatomic) CGFloat blockquoteBorderWidth;
/// Pre Blocks Background Color.
@property (nonatomic, strong) UIColor * _Nullable preBackgroundColor;
@property (nonatomic, copy) NSDictionary<NSAttributedStringKey, id> * _Nonnull typingAttributes;
@property (nonatomic) NSTextAlignment textAlignment;
/// Creates a Text View using the provided parameters as a base for HTML rendering.
/// \param defaultFont The font to use to render the elements if no specific font is set by the HTML.
///
/// \param defaultParagraphStyle The default paragraph style if no explicit attributes are defined in HTML
///
/// \param defaultMissingImage The image to use if the view is not able to render an image specified in the HTML.
///
- (nonnull instancetype)initWithDefaultFont:(UIFont * _Nonnull)defaultFont defaultParagraphStyle:(ParagraphStyle * _Nonnull)defaultParagraphStyle defaultMissingImage:(UIImage * _Nonnull)defaultMissingImage OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)cut:(id _Nullable)sender;
- (void)copy:(id _Nullable)sender;
- (void)paste:(id _Nullable)sender;
- (void)pasteWithoutFormatting:(id _Nullable)sender;
@property (nonatomic, readonly, copy) NSArray<UIKeyCommand *> * _Nullable keyCommands;
- (void)insertText:(NSString * _Nonnull)text;
- (void)deleteBackward;
- (void)didMoveToWindow;
- (CGRect)caretRectForPosition:(UITextPosition * _Nonnull)position SWIFT_WARN_UNUSED_RESULT;
- (void)toggleBoldface:(id _Nullable)sender;
- (void)toggleItalics:(id _Nullable)sender;
- (void)toggleUnderline:(id _Nullable)sender;
/// When the selected text range is set, by default, any custom attributes are removed from typingAttributes.
/// We override this property to fix that behavior.
@property (nonatomic, strong) UITextRange * _Nullable selectedTextRange;
- (nonnull instancetype)initWithFrame:(CGRect)frame textContainer:(NSTextContainer * _Nullable)textContainer SWIFT_UNAVAILABLE;
@end















/// Custom text attachment.
SWIFT_CLASS("_TtC5Aztec15VideoAttachment")
@interface VideoAttachment : MediaAttachment
/// Required Initializer
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
/// Required Initializer
- (nonnull instancetype)initWithData:(NSData * _Nullable)contentData ofType:(NSString * _Nullable)uti OBJC_DESIGNATED_INITIALIZER;
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
@end


@interface VideoAttachment (SWIFT_EXTENSION(Aztec))
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
@end

#endif
#if defined(__cplusplus)
#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
